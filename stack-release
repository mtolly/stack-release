#!/usr/bin/env ruby

require 'yaml'
require 'fileutils'

def sys(*args)
  STDERR.puts "> #{args.join(' ')}"
  result = system(*args)
  unless result
    STDERR.puts "#{$0}: command returned #{$?.exitstatus}"
    exit 1
  end
end

def cd(dir, &blk)
  FileUtils.cd(dir) do
    STDERR.puts "> (cd #{dir}"
    blk.call()
    STDERR.puts "> )"
  end
end

yml = YAML.load File.open 'stack.yaml'
version = `cabal info .`.match(/\A\*\s+[\w-]+-([\d\.]+)\s+/) do |md|
  md[1]
end or throw "#{$0}: couldn't parse cabal info"

unless ARGV.length == 2
  STDERR.puts "Usage: #{$0} [platform] [executable name]"
  STDERR.puts "Platforms: windows, mac, mac-app, linux"
  exit 1
end
platform = ARGV[0]
exe      = ARGV[1]

# http://stackoverflow.com/a/171011
module OS
  def OS.windows?
    (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
  end

  def OS.mac?
   (/darwin/ =~ RUBY_PLATFORM) != nil
  end

  def OS.unix?
    !OS.windows?
  end

  def OS.linux?
    OS.unix? and not OS.mac?
  end
end

extra = Dir['README*', 'LICENSE*', 'COPYING*']

if OS.mac? && platform == 'mac'

  FileUtils.rm_rf '.stack-work/release/mac'
  sys "stack build"
  FileUtils.mkdir_p '.stack-work/release/mac'
  FileUtils.cp `stack exec which #{exe}`.chomp, '.stack-work/release/mac'
  sys "strip .stack-work/release/mac/#{exe}"
  sys "dylibbundler -cd -of -b -x .stack-work/release/mac/#{exe} -d .stack-work/release/mac -p '@executable_path'"
  extra.each { |f| FileUtils.cp(f, '.stack-work/release/mac') }
  cd '.stack-work/release/mac' do
    sys "zip -r ../#{exe}-v#{version}-mac.zip ./*"
  end

elsif OS.mac? && platform == 'mac-app'

  FileUtils.rm_rf '.stack-work/release/mac-app'
  sys "stack build"
  contents = ".stack-work/release/mac-app/#{exe}.app/Contents"
  FileUtils.mkdir_p "#{contents}/MacOS"
  FileUtils.mkdir_p "#{contents}/libs"
  FileUtils.cp `stack exec which #{exe}`.chomp, "#{contents}/MacOS"
  sys "strip #{contents}/MacOS/#{exe}"
  sys "dylibbundler -cd -of -b -x #{contents}/MacOS/#{exe} -d #{contents}/libs -p '@executable_path/../libs'"
  extra.each { |f| FileUtils.cp(f, '.stack-work/release/mac') }
  File.open("#{contents}/Info.plist", 'w') do |f|
    f.puts <<-EOS
      <plist version="1.0">
      <dict>
        <key>CFBundleExecutable</key>
        <string>#{exe}</string>
        <key>CFBundleName</key>
        <string>#{exe}</string>
      </dict>
      </plist>
    EOS
  end
  cd '.stack-work/release/mac-app' do
    sys "zip -r ../#{exe}-v#{version}-mac-app.zip ./*"
  end

else

  STDERR.puts "#{$0}: unsupported platform combination"
  exit 1

end
